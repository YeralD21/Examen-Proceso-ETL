SCRIPT DE POWER QUERY M PARA KAGGLE SURVEY ETL
==================================================

INSTRUCCIONES DE USO:
1. Abrir Power BI Desktop
2. Ir a 'Obtener datos' > 'Archivo' > 'Texto/CSV'
3. Seleccionar el archivo 'multipleChoiceResponses.csv'
4. En el Editor de Power Query, ir a 'Vista' > 'Editor avanzado'
5. Reemplazar el código existente con el siguiente script:


// Script de Power Query M para replicar el proceso ETL
// Kaggle Survey 2019 - Ingeniería de Sistemas

let
    // PASO 1: Cargar datos desde CSV
    // ¿Por qué este paso? Cargar los datos originales para procesar
    Source = Csv.Document(File.Contents("multipleChoiceResponses.csv"),[Delimiter=",", Columns=350, Encoding=65001, QuoteStyle=QuoteStyle.None]),
    PromotedHeaders = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),
    
    // PASO 2: Eliminar registros duplicados
    // ¿Por qué este paso? Evitar duplicación de datos en análisis
    RemovedDuplicates = Table.Distinct(PromotedHeaders),
    
    // PASO 3: Manejo de valores nulos
    // ¿Por qué este paso? Eliminar columnas con demasiados nulos
    ColumnCount = Table.ColumnCount(RemovedDuplicates),
    RowCount = Table.RowCount(RemovedDuplicates),
    Threshold = RowCount * 0.8,
    
    // Identificar columnas a eliminar (>80% nulos)
    ColumnsToRemove = List.Select(Table.ColumnNames(RemovedDuplicates), 
        each List.Count(List.RemoveNulls(Table.Column(RemovedDuplicates, _))) < Threshold),
    
    // Eliminar columnas con muchos valores faltantes
    RemovedHighNullColumns = Table.RemoveColumns(RemovedDuplicates, ColumnsToRemove),
    
    // PASO 4: Imputar valores nulos
    // ¿Por qué este paso? Completar datos faltantes para análisis
    // Para columnas de texto, reemplazar con "No especificado"
    TextColumns = List.Select(Table.ColumnNames(RemovedHighNullColumns), 
        each Value.Type(Table.Column(RemovedHighNullColumns, _){0}) = type text),
    
    // Para columnas numéricas, reemplazar con mediana
    NumericColumns = List.Select(Table.ColumnNames(RemovedHighNullColumns), 
        each Value.Type(Table.Column(RemovedHighNullColumns, _){0}) = type number),
    
    // Aplicar transformaciones
    ImputedTextColumns = List.Accumulate(TextColumns, RemovedHighNullColumns, 
        (table, column) => Table.ReplaceValue(table, null, "No especificado", Replacer.ReplaceValue, {column})),
    
    ImputedNumericColumns = List.Accumulate(NumericColumns, ImputedTextColumns, 
        (table, column) => Table.ReplaceValue(table, null, 
            List.Median(List.RemoveNulls(Table.Column(table, column))), 
            Replacer.ReplaceValue, {column})),
    
    // PASO 5: Limpiar espacios en blanco
    // ¿Por qué este paso? Estandarizar formato de texto
    TrimmedColumns = List.Accumulate(TextColumns, ImputedNumericColumns, 
        (table, column) => Table.TransformColumns(table, {{column, Text.Trim}})),
    
    // PASO 6: Renombrar columnas principales
    // ¿Por qué este paso? Hacer nombres más descriptivos
    RenamedColumns = Table.RenameColumns(TrimmedColumns, {
        {"Time from Start to Finish (seconds)", "Tiempo_Total_Encuesta_Segundos"},
        {"Q1", "Edad_Encuestado"},
        {"Q2", "Genero"},
        {"Q3", "Pais_Residencia"},
        {"Q4", "Nivel_Educativo"},
        {"Q5", "Area_Estudios_Principal"},
        {"Q6", "Situacion_Laboral_Actual"},
        {"Q7", "Cargo_Principal_Trabajo"},
        {"Q8", "Anos_Experiencia_Campo"},
        {"Q9", "Rango_Salarial_Anual"}
    }),
    
    // PASO 7: Crear columnas derivadas
    // ¿Por qué este paso? Facilitar análisis agrupando categorías
    // Categoría de experiencia
    AddedExperienceCategory = Table.AddColumn(RenamedColumns, "Categoria_Experiencia", 
        each if [Anos_Experiencia_Campo] = "0-1" or [Anos_Experiencia_Campo] = "1-2" then "Principiante (0-2 años)"
        else if [Anos_Experiencia_Campo] = "2-3" or [Anos_Experiencia_Campo] = "3-4" then "Intermedio (2-4 años)"
        else if [Anos_Experiencia_Campo] = "4-5" or [Anos_Experiencia_Campo] = "5-10" then "Avanzado (4-10 años)"
        else if [Anos_Experiencia_Campo] = "10-15" or [Anos_Experiencia_Campo] = "15-20" or [Anos_Experiencia_Campo] = "20+" then "Experto (10+ años)"
        else "No especificado"),
    
    // Categoría de salario
    AddedSalaryCategory = Table.AddColumn(AddedExperienceCategory, "Categoria_Salarial", 
        each if [Rango_Salarial_Anual] = "0-10,000" or [Rango_Salarial_Anual] = "10-20,000" then "Bajo (0-20k)"
        else if [Rango_Salarial_Anual] = "20-30,000" or [Rango_Salarial_Anual] = "30-40,000" or [Rango_Salarial_Anual] = "40-50,000" then "Medio (20-50k)"
        else if [Rango_Salarial_Anual] = "50-60,000" or [Rango_Salarial_Anual] = "60-70,000" or [Rango_Salarial_Anual] = "70-80,000" or [Rango_Salarial_Anual] = "80-90,000" or [Rango_Salarial_Anual] = "90-100,000" then "Alto (50-100k)"
        else if [Rango_Salarial_Anual] = "100-125,000" or [Rango_Salarial_Anual] = "125-150,000" or [Rango_Salarial_Anual] = "150-200,000" or [Rango_Salarial_Anual] = "200-250,000" or [Rango_Salarial_Anual] = "250-300,000" or [Rango_Salarial_Anual] = "300-400,000" or [Rango_Salarial_Anual] = "400-500,000" or [Rango_Salarial_Anual] = "500,000+" then "Muy Alto (100k+)"
        else "No especificado"),
    
    // PASO 8: Convertir tipos de datos
    // ¿Por qué este paso? Asegurar tipos correctos para análisis
    ConvertedTypes = Table.TransformColumnTypes(AddedSalaryCategory, {
        {"Tiempo_Total_Encuesta_Segundos", type number}
    })
    
in
    ConvertedTypes


MÉTRICAS ESPERADAS PARA VALIDACIÓN:
----------------------------------------
Total de registros: 19,717
Total de columnas: 298
Valores nulos totales: 0
Registros únicos: 19,717
Memoria utilizada: ~39.0 MB
